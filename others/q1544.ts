// LCP 13. 寻宝 https://leetcode-cn.com/problems/xun-bao/

interface Point {
    x: number;
    y: number;
}

function minimalSteps(maze: string[]): number {
    if (maze.length === 0) return -1;
    let startPoint: Point = {
        x: -1,
        y: -1
    }, endPoint: Point = {
        x: -1,
        y: -1
    };
    let mazeArr = maze.map(line => line.split(''));
    const m = mazeArr.length;
    const n = mazeArr[0].length;
    const MArr: Point[] = [];
    const OArr: Point[] = [];
    const shaperArr: number[][] = new Array(m).fill([]).map(() => new Array(n).fill(0));
    for (let i = 0; i < mazeArr.length; i++) {
        for (let j = 0; j < mazeArr[0].length; j++) {
            if (mazeArr[i][j] === 'S') {
                startPoint = {
                    x: i,
                    y: j,
                }
            }
            if (mazeArr[i][j] === 'T') {
                endPoint = {
                    x: i,
                    y: j,
                }
            }
            if (mazeArr[i][j] === 'M') {
                MArr.push({
                    x: i,
                    y: j
                })
            }
            if (mazeArr[i][j] === 'O') {
                OArr.push({
                    x: i,
                    y: j
                })
            }
            if (mazeArr[i][j] === '#') {
                shaperArr[i][j] = -1;
            }
        }
    }
    function computeStep(origin: { x: number, y: number }) {
        const flagArr = shaperArr.map(v => [...v]);
        let queue = [origin];
        let step = 0;
        flagArr[origin.x][origin.y] = -1;
        while (queue.length !== 0) {
            step++;
            let newQueue = [...queue];
            queue = []
            for (let point of newQueue) {
                if (point.x > 0 && flagArr[point.x - 1][point.y] === 0) {
                    flagArr[point.x - 1][point.y] = step;
                    queue.push({ x: point.x - 1, y: point.y });
                }
                if (point.y > 0 && flagArr[point.x][point.y - 1] === 0) {
                    flagArr[point.x][point.y - 1] = step;
                    queue.push({ x: point.x, y: point.y - 1 });
                }

                if (point.x < m - 1 && flagArr[point.x + 1][point.y] === 0) {
                    flagArr[point.x + 1][point.y] = step;
                    queue.push({ x: point.x + 1, y: point.y })
                }
                if (point.y < n - 1 && flagArr[point.x][point.y + 1] === 0) {
                    flagArr[point.x][point.y + 1] = step;
                    queue.push({ x: point.x, y: point.y + 1 })
                }
            }
        }

        return flagArr;
    }

    const startDistanceMap = computeStep(startPoint);

    if (startDistanceMap[endPoint.x][endPoint.y] <= 0) return -1;
    if (MArr.length === 0) {
        return startDistanceMap[endPoint.x][endPoint.y];
    }

    const targetDistanceMap = computeStep(endPoint);

    const M2TSteps = MArr.map(v => targetDistanceMap[v.x][v.y] || -1);
    if (M2TSteps.some(v => v === -1)) {
        return -1;
    }
    const S2OSteps = OArr.map(v => startDistanceMap[v.x][v.y] || -1);
    if (S2OSteps.every((v) => v === -1)) {
        return -1;
    }

    const MArrDistanceMap = MArr.map(v => computeStep(v))

    const M2OSteps = MArr.map((v, i) => {
        let temp = [];
        for (let p of OArr) {
            temp.push(MArrDistanceMap[i][p.x][p.y] || -1);
        }
        return temp;
    })

    const PointDistance: number[][] = new Array(MArr.length + 1).fill([]).map(() => new Array(MArr.length + 1).fill(-1));

    for (let i = -1; i < MArr.length; i++) {
        for (let j = 0; j < MArr.length; j++) {
            if (i === j) continue
            PointDistance[i + 1][j] = minPickStoneFor2Index(i, j)
        }
    }

    function minPickStoneFor2Index(bIndex: number, nextIndex: number) {
        let steps: number[] = []
        if (bIndex === - 1) {
            OArr.forEach((v, i) => {
                if (S2OSteps[i] === -1 || M2OSteps[nextIndex][i] === -1) return
                steps.push(S2OSteps[i] + M2OSteps[nextIndex][i])
            })
        } else {
            OArr.forEach((v, i) => {
                if (M2OSteps[bIndex][i] === -1 || M2OSteps[nextIndex][i] === -1) return
                steps.push(M2OSteps[bIndex][i] + M2OSteps[nextIndex][i])
            })
        }
        steps = steps.filter(v => v !== -1);
        return Math.min(...steps);
    }


    const maskMax = 1 << MArr.length;

    const dp: number[][] = new Array(maskMax + 1).fill([]).map(() => new Array(MArr.length + 1).fill(-1));
    for (let i = 0; i < MArr.length; i++) {
        dp[1 << i][i] = PointDistance[0][i];
    }
    for (let mask = 1; mask < maskMax; mask++) {
        for (let i = 0; i < MArr.length; i++) {
            if (mask & (1 << i)) {
                for (let j = 0; j < MArr.length; j++) {
                    if (!(mask & (1 << j))) {
                        let next = mask | (1 << j);
                        if (dp[next][j] == -1 || dp[next][j] > dp[mask][i] + PointDistance[i + 1][j]) {
                            dp[next][j] = dp[mask][i] + PointDistance[i + 1][j];
                        }
                    }
                }
            }
        }
    }

    let minStep = -1;
    for (let i = 0; i < MArr.length; i++) {
        if (minStep == -1 || minStep > dp[maskMax - 1][i] + M2TSteps[i]) {
            minStep = dp[maskMax - 1][i] + M2TSteps[i];
        }
    }

    return minStep;
};

// console.log(minimalSteps(
//     ["S#O",
//         "M.#",
//         "M.T"]
// ))


// console.log(minimalSteps([
//     "TMM",
//     "..M",
//     "OOS",
//     "#O.",
//     ".#O",
//     "O##"
// ]))


console.log(minimalSteps([
    "#..M.T#",
    ".M.MO..",
    "M##.OO#",
    "##..OM#",
    "...MM..",
    "O...SO.",
    "O..#MO.",
    "O....O."]))

console.log(minimalSteps(
    [
        "#...#...#.#...#.##...#......##........#...#.#.#......##......#.#......#.#..",
        "#.#...#....#.............#.##..#......#........##..#....#...........#......",
        "..#.......#.##.##..#...#..#...#.#...............#....#..#..##......#.#..#..",
        ".......#.#........#.....###..#........#...#..##.......#.....#.#............",
        ".##....#...#....#...##....................#..#.##...##..#.#.#.......#....#.",
        ".#.#.....#........#...............#....##..#......#...##.#..#...##..#.#.##.",
        ".#......#.##..#.#..#..........#.........#......####.....#.#.....####...#...",
        ".......#..........#.##.#..#..................#...#......#.#...#..#.#..##.#.",
        "..#....#..##.....#.##..........#.......#.......#..............#.##..#.##..#",
        "......#........##..#.#..#...#.#..##.........#..###.....#.#...#...#..#.####.",
        ".#...#.........##........###...#..#....#.....#....#....##......##....#...##",
        "..........#.#........................#...##....#.#.#.............##.#.#..#.",
        "....#..#.........#.......#..#.......#.##........####....##..##...#..#......",
        "..##.....#..#....#.........#...###.#.##.#..#.........#..#...##.#........#..",
        ".#...#...##.#.......................#..#.....#...................#..##...#.",
        "..........#............#...##............##....#..#.....#....#..#..........",
        "#....#.#...##..###......T.#.#...##.....#...#.......#.##......#...#..#..#.#.",
        "......#...............##........##.#.......#.......#.....#.#..#.........##.",
        ".#...##.....#......#.##.....#......#.#.......#...#...............##.##.....",
        "#..........#.#.###...#...#......#..##......#....#.......###..M.#.....##....",
        ".................#....###..#....#.##.#...##......##..................#.....",
        "................#...#.....#...#..#..#.#....#............#.#..#.......#...#.",
        "....#..#..........#...#######....#...#...#.....#####..#....#..#..#......#..",
        "...#.......#.....#....#......#..##..#.............#..#......##...##...#..#.",
        "........##..#.#.....#...#.....M#...#..#.#..##..##...#...#....#..........#.#",
        ".#....##...#.#.#.#..#..#.#.#..#...#.#.....#.......#......#..###..#..#.##...",
        "..#....#.##.......##.....###...#.####.......#......#..#...#.#....#....#.##.",
        "...#..#..#.....##.......#...........#.....#.#..#...#.#....##...#.##....#...",
        ".....#...#.#..#..#..#.......#..##...#.....#M.#.......#.....#.#......#.....#",
        "...#........#.....#...#....#..#..#.#.....##.#...##..........##......#.#..##",
        "..........#.##.#..###...#..###..##.....#.##....#....#...#..#..#..#...#...#.",
        "......##........###..#.#.#......#.........#.......#...#...#................",
        ".#.#......#........##...#................#.##.........####..#..##..#.#.#...",
        ".##.##.#.........#.....##.#.#......#..##.#..###......##.#..##.#.######...#.",
        "##.#...#...##.#.#..#......#...............#..................#......#.##..#",
        ".......#.#.##.#.#.##..#.#..#.##...#...........#...#....#..##.....#....#.#..",
        "#.............#......#.##....#...#.#..#.............###...............#....",
        "...##...#..#.........#.#.##.##..##..###.###..#....#........#..##....##.##..",
        ".#..#.#..#.#....####......#...#............................#.....#....##...",
        "......#..#...#...#.............#...#.........###........#..#..M....#.......",
        "..#.##..........#.......##.#......##..#.....#.....#...##......##..........#",
        "#...#.#.#.....##.#.....#....#...........##........#....#....#..##...#..#.#.",
        "...##....#...#...........##.#......##.....#.......##..#..........#.........",
        "..............#.....#..##..#.....#....##.....#.#.............#..###....#.#.",
        "...##...#....##.#.....#....#...##..#..#.#........##..##.......#...#..###...",
        "#....#.....#................#.....#.......##................###............",
        "....##.#....#...............#.......#......#...#...###............##..#.#..",
        ".###.###...#..#..#.#.............#..#..#.#..........#.....#....#.#.....#...",
        "#.....##.#......###.#..........#..#.........#...................#....###...",
        "#.###....##..#...#.#....M.......#.#..........#.........#....#####...#......",
        ".##.#...............##...#..........#...#..#..........#..##...#.#.#.....#..",
        ".#......#..#......##........#...#......#.#..#.#.....##.##.#..#....#.##...#.",
        "...#.#..##.........##.#........#.........#.##..####..##..#..#...#...##...#.",
        ".#.....#.............##....#..#...#...##..##..##.....##.....#.......#......",
        "##.#......#...##.........#.###...........#...#.#.......#...#.#..#..##...#..",
        ".................##.#....#.#..##..................#.##....###......#.......",
        "..#.#...#......#..###...#.#............#..........#.##..#..#.....#...#.....",
        ".##....##............#...#.....#.##.....#.#..#.#..##.##......#..........##.",
        "#.#.......###..####..##..##............##..#...#.#..................#.###.#",
        "....##.........#.#..#........#..#..##.#......###...#........#.....##..#....",
        "#...#...#...#.....#.#..#...#.##..................#.##...#.#..#.......#.....",
        "....#.##.#.###.......#..........#..###.....#....#.#.#.#......#.#..##.#.....",
        ".#..............##..#.#.........#.#....#S..#.....#.##....#.##...........#..",
        "..##......#..#.....#.#.#...#.#.....#.#..#####..###...##...#.....#...#.....#",
        "........#.##..#.##....#......#.##.#......#....#..#.......#.#.....#........#",
        "......#.....#...##....###.#...#..#..#.......#..#.#....##.#.....#..#.....#..",
        "..........#.#...#............#....##..###.......#........#..............#..",
        "..##...#..##.......##......................#.....#.##..#.#...#.....###.#...",
        "##............##.....#............#.#.....#..##...##..#...#........##......",
        "#....#....#.........M......#..#..#..#......#......###........#.#........#..",
        ".#.#..##...#.#...#.#....#.#....#......#.#..#........#............####......",
        "....#....#....#.#...#....#..#.#....M.....#...........#...#...##.#......#...",
        "......##...#....#....#..#.#.##.......#....##.#....#..#..#.#...###..##.##...",
        ".#......#..#.....#.........#....#.............#........##..##....#.....#.#.",
        ".#.##.##..#..##.##.#....#...#...........#.....#..##................#.##....",
        "#..#..###......##.##..##.##...............#.........#....##..#...#.#.#....#",
        "....#.#...##.#.#.......#.#...#....##..............#..##.......##..#..#.....",
        "...#.#.........##......#.....#..#.##..###..#..#.#........#......##..#.....#",
        "#.#.....##.##.......#.#.....#......#..##....#....#..#...........#.#..#.....",
        "...........##...#...#..#....#..##.....#..#...#.##..............#..##.....#.",
        "......M#.#.#.......##.##....#.#.#........#.##....#........#...###.......#..",
        "..........###........#......##...#.#...........#....#.##...#.#...#....#....",
        ".##.....#.......#...#.....#.....#..........#..#....##............#..#..#...",
        "...........#...#.#.#.#...#.#....#......#........#.#..#...#....#.#..........",
        ".##...#..#.###..#.........##....#..............#........#.#..#.##M.........",
        "###....#..#####..#..#..#...#.....#.#......#####.#.........##.#..#....#.#...",
        "...#..#.......#........#............##.#.#...#.#...#....###..#.............",
        "..#.#.#....#...#..#..#.#...#......#...###..#..#...#..##..##....#.......#...",
        "...#......#..##..#..#............###..........#........#...##..##..#....#..",
        "###........#..##.....#..##......##..#..#.......#..#.....................O..",
        "........###.#...#......#.......#....#.....#..#..#....##.##..##....#....#.#.",
        "##..##..##.....##......#....#.#....##.......##.#........##.#..#....####...#",
        "#..##....#.....##.#.....#.............#...##.#...#...#..#........#.##......",
        ".##.#.##...........#...........#.......#.##......##..#.......###..#..##...#",
        "..#........#....##.....#..#......##...##...#.#.#.#......#....#.#..#.....#..",
        "..#...##.....#.#.#..................#..#.....#..........#..#.M..#........#.",
        "..#.....##..#.........##...........##....#........#..M...#........#.#......",
        ".##.##.....#......................#..#.#...#.........#.....#...###....#.#..",
        "#.##.....#.....#........#.......##..###.........#.#....#.....#..#..##......",
        "......#.............##......######...#..#.##...#.##.##.....#.#..#.#.#...##."]
))

console.log(minimalSteps(
    [
        "......#...............#.....................#.................#......#....#.#...................",
        "......#.........#......#.....O..#..................#............#........M..##..................",
        "#.........#............#...#......#............................#...#...............##....#......",
        ".#..#.#..#.........#........................#......#..............##...........................#",
        "....#.....#......#.............##..........#..........#............................O............",
        "...........#..#...#......................#....#....#.................#..........................",
        "......................#..#.....O....#....#.............................O.......#..##.....#......",
        "###...##.........#....#...O........................#.................#..##..#..............M#...",
        "......................#....#....#..........#.#.#....#....#.....#......##..........#..........#..",
        ".#.#..#....#.............#............#...........#...#.......M.............#..........#...##...",
        ".........#..#...#.......#......................#......#..................#.#..............#.....",
        "..........#...#.....................#...........#....#....#....##....#......#..........#........",
        ".#.....................#..............#......#.#....##.......#....#......#..#............#......",
        "........#...#.##........#.#...O...........#......#....#......O#...#.......#...#.##....#...#.#...",
        "......#..............#.............#......#.#........................#.........M..##...#.....#..",
        ".#..#........#................#......#...##.................#..#.##.#.....#........#.....#..#...",
        "..#....#..#..........#.......##..#......................#..#.##.#.....#.........................",
        "..#...#....M##................#.........#...#......................................#.#..........",
        "#...........#...............#.............#.............#..#....##.#............................",
        ".....#.O..#....................#..#.#................#............#.......#................#.##.",
        "...##..............#...#............#.#.........#.......................#...###...........#.#...",
        "#..##.....#........#...#..........#...#........#......#....#......##...........#..#.......O.....",
        "....#..........#.......#......#......#..#....O..............#.......#.....#.....MO.#....#.......",
        ".##..........#....###..#..................#..O..#......#......................................#.",
        ".....#........#...#...................#..#...####.........#.#..............##.......O...........",
        ".#............#......#..........#................###..##....#....#......#..#...#......#..#.#....",
        ".##....#..#.#....#...........................#.........#..#......#.........#.....#.#....M#......",
        ".....#.#...............#......#.......##.....#.............#.#.#.##.....................#.#.#...",
        ".............#....#..........##....#.......#........#.......##........O........#........#......M",
        ".#...............#.....#.....#......#........#....#..#...##.##..........#....O......#...........",
        ".........#...##.O...............#..........................#................................#...",
        "........#....##..#....................#.......#.#...#.................#.#.........##............",
        "...............#..........#.............#...............#...#.....#.......#.....................",
        "....#..............................#.....#...#......#..........#...........#..............#...#.",
        "..O...............#........#......#.#........#.#.........#...............#..#.#.#.............#.",
        "..#............#........................#.#..#...##.......#....##..........#.....#.....#......#.",
        "...#..#..........#...#......#..#.##.......................O....#...............#......#..#......",
        "..........##.....#........#..........#..#.............#....................#.......#............",
        ".........#......#....#.........................#...#.....#..........#..#.....#....#....##......#",
        "....##......#.#................#.#.....#.##.............#....#..................#...#.....#.....",
        "..#........#.#.................#.........#..........#............#.............#......##........",
        "............#....#......#....#.#.......#..............#......#.......#.........#................",
        ".........##....#................#.#..#............#.....#......#..........................#.##..",
        "...#..#......####..#......#.#.#..#.....#...........#........#..........#..........M#.M......##..",
        "...O....#........#.......#........#.#................#..#................#..................#...",
        "..........#..#...............#..#........#.......#....................#.........................",
        "..........##.......#..#.##...#...##....#.#..............#.......#.........................#.....",
        "...........................#...#......................#........#...#..#.....#..#.#.......#......",
        "................................#......................#.#.#.........#..........#............#.#",
        "#..#.........#.....................................#........#..#....................#.....#....#",
        "..#...#.................#.##......#..........#.................#....#...#.......................",
        ".......#.......#......#...#.#..................................#........#.......................",
        ".#...........#...........#...#............##.#......M................#...............#..........",
        "............................#.....#...#..............#................#..#....#...T.....#.....#.",
        ".#....###....##..........#................................#..............#...........#...#......",
        "#..#..#.............#.....#...................#........#.......#...#...........................#",
        "......#..............#.............#...............#.#..................#.....O................#",
        "........#................................#.#.#....#..#..........#..................#...#........",
        "..................#...#...........#.........#.............##..........#.#.....#....#......#....#",
        "..#..#.##..#...............#.........#..#...##...M..#..##...#....#O...............#.....#....##.",
        "##..#...#...........#.....#.......#.....#M#.#........#...#..........#.......#..#..#.............",
        "...................................#....##.........#.#.#...............#..........#...#O#.......",
        "....#...#..#..............................#...........#.#............#..#....#..#...#.#.........",
        "..#.............#....#..##...#........................#.....#.##......#.............#.....#.....",
        "...........#...#........#....#...#.............#....#.........#..........#........#.............",
        "#.....#......#....#..#....#..#.............................#.............#......................",
        ".......#......#................##..........#....#.......#....#............................#..#.#",
        "....................................#.............#...#.....#....#..#...#...........#.........#.",
        "....#.............##.#.......#..#.#..#...#.......#...#..........#..........................##..#",
        ".......##........###....####............#.#.....................#.....#....#.................#.#",
        "....#.....#...##......#........#....#.....#.....#..#........#...#.....#..........#...#..........",
        "#.....#......#.............#....#..........#......................#.#.....#..M......#.......#...",
        "...............#..O.#..#..#......#......#......#.................#.......#......##........#.....",
        "..##.....#.#........#.......#.#......#.....#....#......#...##.#....................#.#..........",
        ".##........#...#...............#...#.........#...#...O....#.......#.......##.#..........#....#..",
        "...............#..................#........................................................#....",
        "#..............#..........#.....................#....................#...........#..........#...",
        "..#....#........#...........#........#.....#.............#.#.............#.......#.#..##..#.#...",
        "....#..............S......#.........#....#..#.#........#..#....##...........##....#........#....",
        ".............#.............#.......#...#......................................#............#.###",
        ".#........#.#..#..#..##.....#......#......................#....#.................#........#.....",
        "..................#...........#.....##.......##..#........................#........##..O.....#..",
        "##.....##....#.....#...#..#.....#..........................#...#.#...................#..#.......",
        "..#...............#.....#.......#...#.......#...#.##...........#......#...#......##....O.......#",
        ".#...................#...............#....#........#..........#.............#..........#..#.....",
        "............#.........#.......#...........................#......#......#.......#.......#....#.."]
))